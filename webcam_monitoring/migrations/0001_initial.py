# Generated by Django 5.0.1 on 2025-08-29 19:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('learning', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoringReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('session', 'Session Report'), ('custom', 'Custom Report')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('total_monitoring_time_minutes', models.IntegerField()),
                ('average_attention_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dominant_emotions', models.JSONField(default=dict)),
                ('behavior_patterns', models.JSONField(default=dict)),
                ('attention_trends', models.JSONField(default=dict)),
                ('engagement_patterns', models.JSONField(default=dict)),
                ('learning_indicators', models.JSONField(default=dict)),
                ('improvement_areas', models.JSONField(default=list)),
                ('total_alerts', models.IntegerField(default=0)),
                ('alert_breakdown', models.JSONField(default=dict)),
                ('resolved_alerts', models.IntegerField(default=0)),
                ('ai_recommendations', models.JSONField(default=list)),
                ('intervention_suggestions', models.JSONField(default=list)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.CharField(default='AI_Monitoring_System', max_length=50)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_reports', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='MonitoringSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitoring_enabled', models.BooleanField(default=False)),
                ('parent_consent', models.BooleanField(default=False)),
                ('student_consent', models.BooleanField(default=False)),
                ('data_retention_days', models.IntegerField(default=30)),
                ('face_detection', models.BooleanField(default=True)),
                ('emotion_analysis', models.BooleanField(default=True)),
                ('attention_tracking', models.BooleanField(default=True)),
                ('behavior_analysis', models.BooleanField(default=False)),
                ('posture_monitoring', models.BooleanField(default=False)),
                ('real_time_alerts', models.BooleanField(default=True)),
                ('alert_thresholds', models.JSONField(default=dict)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('save_recordings', models.BooleanField(default=False)),
                ('recording_quality', models.CharField(default='medium', max_length=20)),
                ('auto_delete_recordings', models.BooleanField(default=True)),
                ('monitoring_schedule', models.JSONField(default=dict)),
                ('break_intervals', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_settings', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('data_access', 'Data Access'), ('data_export', 'Data Export'), ('data_deletion', 'Data Deletion'), ('consent_given', 'Consent Given'), ('consent_revoked', 'Consent Revoked'), ('settings_changed', 'Settings Changed'), ('report_generated', 'Report Generated'), ('alert_triggered', 'Alert Triggered')], max_length=30)),
                ('description', models.TextField()),
                ('data_accessed', models.JSONField(default=list)),
                ('justification', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_audit_logs', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='WebcamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('terminated', 'Terminated'), ('error', 'Error')], default='active', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('video_quality', models.CharField(default='720p', max_length=20)),
                ('frame_rate', models.IntegerField(default=30)),
                ('device_info', models.JSONField(default=dict)),
                ('consent_given', models.BooleanField(default=False)),
                ('consent_timestamp', models.DateTimeField(blank=True, null=True)),
                ('privacy_settings', models.JSONField(default=dict)),
                ('face_detection_enabled', models.BooleanField(default=True)),
                ('emotion_analysis_enabled', models.BooleanField(default=True)),
                ('attention_tracking_enabled', models.BooleanField(default=True)),
                ('posture_analysis_enabled', models.BooleanField(default=False)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webcam_sessions', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='EmotionAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('dominant_emotion', models.CharField(choices=[('happy', 'Happy'), ('sad', 'Sad'), ('angry', 'Angry'), ('surprised', 'Surprised'), ('fearful', 'Fearful'), ('disgusted', 'Disgusted'), ('neutral', 'Neutral'), ('confused', 'Confused'), ('frustrated', 'Frustrated'), ('excited', 'Excited'), ('bored', 'Bored')], max_length=20)),
                ('emotion_scores', models.JSONField(default=dict)),
                ('emotion_confidence', models.DecimalField(decimal_places=2, max_digits=3)),
                ('engagement_level', models.CharField(choices=[('disengaged', 'Disengaged'), ('low', 'Low Engagement'), ('moderate', 'Moderate Engagement'), ('high', 'High Engagement'), ('very_high', 'Very High Engagement')], max_length=20)),
                ('engagement_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('facial_landmarks', models.JSONField(blank=True, default=dict)),
                ('micro_expressions', models.JSONField(blank=True, default=list)),
                ('confusion_detected', models.BooleanField(default=False)),
                ('frustration_detected', models.BooleanField(default=False)),
                ('comprehension_indicators', models.JSONField(blank=True, default=dict)),
                ('webcam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emotion_data', to='webcam_monitoring.webcamsession')),
            ],
        ),
        migrations.CreateModel(
            name='BehaviorAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('behavior_type', models.CharField(choices=[('focused', 'Focused Learning'), ('distracted', 'Distracted'), ('fidgeting', 'Fidgeting'), ('sleepy', 'Showing Signs of Fatigue'), ('engaged', 'Actively Engaged'), ('passive', 'Passive Learning'), ('confused', 'Showing Confusion'), ('confident', 'Showing Confidence')], max_length=20)),
                ('behavior_intensity', models.CharField(default='moderate', max_length=20)),
                ('duration_seconds', models.IntegerField()),
                ('body_movement_level', models.CharField(default='normal', max_length=20)),
                ('posture_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('posture_changes', models.IntegerField(default=0)),
                ('hand_gestures', models.JSONField(blank=True, default=list)),
                ('note_taking_detected', models.BooleanField(default=False)),
                ('device_interaction', models.BooleanField(default=False)),
                ('question_asking_gesture', models.BooleanField(default=False)),
                ('thinking_posture', models.BooleanField(default=False)),
                ('active_participation', models.BooleanField(default=False)),
                ('webcam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_data', to='webcam_monitoring.webcamsession')),
            ],
        ),
        migrations.CreateModel(
            name='AttentionAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('attention_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], max_length=20)),
                ('attention_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('focus_duration_seconds', models.IntegerField()),
                ('distraction_count', models.IntegerField(default=0)),
                ('gaze_direction', models.CharField(choices=[('center', 'Looking at Screen'), ('left', 'Looking Left'), ('right', 'Looking Right'), ('up', 'Looking Up'), ('down', 'Looking Down'), ('away', 'Looking Away')], max_length=20)),
                ('eye_contact_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('blink_rate', models.IntegerField(blank=True, null=True)),
                ('head_pose', models.JSONField(default=dict)),
                ('head_movement_intensity', models.CharField(default='normal', max_length=20)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=3)),
                ('analysis_method', models.CharField(default='computer_vision', max_length=50)),
                ('webcam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attention_data', to='webcam_monitoring.webcamsession')),
            ],
        ),
        migrations.CreateModel(
            name='AlertEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('attention_drop', 'Attention Level Drop'), ('prolonged_confusion', 'Prolonged Confusion'), ('disengagement', 'Student Disengagement'), ('fatigue', 'Signs of Fatigue'), ('distraction', 'Persistent Distraction'), ('technical_issue', 'Technical Issue'), ('privacy_concern', 'Privacy Concern'), ('help_needed', 'Student Needs Help')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=20)),
                ('message', models.TextField()),
                ('trigger_data', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.staff')),
                ('webcam_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='webcam_monitoring.webcamsession')),
            ],
        ),
    ]
