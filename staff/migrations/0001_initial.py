# Generated by Django 5.0.2 on 2025-08-29 20:51

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(help_text='Unique employee ID', max_length=20, unique=True)),
                ('department', models.CharField(choices=[('teaching', 'Teaching'), ('administration', 'Administration'), ('support', 'Support'), ('technology', 'Technology'), ('health', 'Health Services'), ('security', 'Security'), ('maintenance', 'Maintenance'), ('other', 'Other')], help_text='Staff department', max_length=20)),
                ('role', models.CharField(choices=[('teacher', 'Teacher'), ('teaching_assistant', 'Teaching Assistant'), ('administrator', 'Administrator'), ('counselor', 'Counselor'), ('librarian', 'Librarian'), ('nurse', 'Nurse'), ('technician', 'Technician'), ('coordinator', 'Coordinator'), ('other', 'Other')], help_text='Staff role', max_length=20)),
                ('hire_date', models.DateField(help_text='Date of hire')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave'), ('terminated', 'Terminated'), ('probation', 'Probation')], default='active', max_length=20)),
                ('qualifications', models.JSONField(default=list, help_text='List of qualifications and certifications')),
                ('specializations', models.JSONField(default=list, help_text='Areas of specialization')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff Member',
                'verbose_name_plural': 'Staff Members',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='StaffAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_type', models.CharField(choices=[('teaching', 'Teaching'), ('supervision', 'Supervision'), ('administrative', 'Administrative'), ('support', 'Support'), ('special_project', 'Special Project'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(help_text='Assignment title', max_length=200)),
                ('description', models.TextField(help_text='Assignment description')),
                ('start_date', models.DateField(help_text='Assignment start date')),
                ('end_date', models.DateField(blank=True, help_text='Assignment end date (if applicable)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this assignment currently active?')),
                ('responsibilities', models.JSONField(default=list, help_text='List of responsibilities')),
                ('performance_metrics', models.JSONField(default=dict, help_text='Performance evaluation metrics')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='staff.staff')),
            ],
            options={
                'verbose_name': 'Staff Assignment',
                'verbose_name_plural': 'Staff Assignments',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='StaffPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_period', models.CharField(help_text="Evaluation period (e.g., 'Q1 2024')", max_length=50)),
                ('evaluation_date', models.DateField(default=django.utils.timezone.now, help_text='Date of evaluation')),
                ('overall_rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('needs_improvement', 'Needs Improvement'), ('unsatisfactory', 'Unsatisfactory')], max_length=20)),
                ('strengths', models.JSONField(default=list, help_text='List of strengths')),
                ('areas_for_improvement', models.JSONField(default=list, help_text='Areas that need improvement')),
                ('goals', models.JSONField(default=list, help_text='Performance goals for next period')),
                ('comments', models.TextField(blank=True, help_text='Additional comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluations_given', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='staff.staff')),
            ],
            options={
                'verbose_name': 'Staff Performance',
                'verbose_name_plural': 'Staff Performance Records',
                'ordering': ['-evaluation_date'],
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_grades', models.JSONField(default=list, help_text='Grade levels assigned to this staff member')),
                ('assigned_subjects', models.JSONField(default=list, help_text='Subjects assigned to this staff member')),
                ('teaching_experience', models.PositiveIntegerField(default=0, help_text='Years of teaching experience')),
                ('certifications', models.JSONField(default=list, help_text='Professional certifications')),
                ('preferences', models.JSONField(default=dict, help_text='Staff preferences and settings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='staff.staff')),
            ],
            options={
                'verbose_name': 'Staff Profile',
                'verbose_name_plural': 'Staff Profiles',
            },
        ),
        migrations.CreateModel(
            name='StaffSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField(help_text='Start time for this day')),
                ('end_time', models.TimeField(help_text='End time for this day')),
                ('is_working_day', models.BooleanField(default=True, help_text='Is this a working day?')),
                ('break_start', models.TimeField(blank=True, help_text='Break start time', null=True)),
                ('break_end', models.TimeField(blank=True, help_text='Break end time', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes for this schedule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='staff.staff')),
            ],
            options={
                'verbose_name': 'Staff Schedule',
                'verbose_name_plural': 'Staff Schedules',
                'ordering': ['staff', 'day_of_week'],
                'unique_together': {('staff', 'day_of_week')},
            },
        ),
    ]
