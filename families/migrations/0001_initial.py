# Generated by Django 5.0.2 on 2025-08-29 20:51

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_name', models.CharField(help_text='Family name or surname', max_length=100)),
                ('primary_contact_name', models.CharField(help_text="Primary contact person's name", max_length=100)),
                ('primary_contact_email', models.EmailField(help_text='Primary contact email address', max_length=254)),
                ('primary_contact_phone', models.CharField(help_text='Primary contact phone number', max_length=20)),
                ('address', models.TextField(help_text='Family address')),
                ('location', models.CharField(help_text='City/region location', max_length=100)),
                ('emergency_contact', models.JSONField(default=dict, help_text='Emergency contact information')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='family_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Families',
                'ordering': ['family_name'],
            },
        ),
        migrations.CreateModel(
            name='FamilyCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS'), ('in_person', 'In Person'), ('video_call', 'Video Call'), ('other', 'Other')], max_length=20)),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], max_length=20)),
                ('subject', models.CharField(blank=True, help_text='Communication subject', max_length=200)),
                ('content', models.TextField(help_text='Communication content or summary')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('follow_up_required', models.BooleanField(default=False, help_text='Does this communication require follow-up?')),
                ('follow_up_notes', models.TextField(blank=True, help_text='Notes for follow-up actions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to='families.family')),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_communications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Family Communication',
                'verbose_name_plural': 'Family Communications',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of family member', max_length=100)),
                ('relationship', models.CharField(choices=[('parent', 'Parent'), ('guardian', 'Guardian'), ('sibling', 'Sibling'), ('grandparent', 'Grandparent'), ('uncle_aunt', 'Uncle/Aunt'), ('other', 'Other')], help_text='Relationship to primary contact', max_length=20)),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of birth', null=True)),
                ('contact_info', models.JSONField(default=dict, help_text='Contact information for this member')),
                ('emergency_contact', models.BooleanField(default=False, help_text='Is this person an emergency contact?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_members', to='families.family')),
            ],
            options={
                'verbose_name': 'Family Member',
                'verbose_name_plural': 'Family Members',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FamilyNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('academic_progress', 'Academic Progress'), ('behavior_alerts', 'Behavior Alerts'), ('attendance', 'Attendance'), ('general_announcements', 'General Announcements'), ('emergency', 'Emergency Notifications'), ('other', 'Other')], max_length=30)),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push_notification', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('enabled', models.BooleanField(default=True, help_text='Is this notification type enabled?')),
                ('frequency', models.CharField(default='immediate', help_text='Notification frequency', max_length=20)),
                ('custom_settings', models.JSONField(default=dict, help_text='Custom notification settings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='families.family')),
            ],
            options={
                'verbose_name': 'Family Notification',
                'verbose_name_plural': 'Family Notifications',
                'ordering': ['family', 'notification_type'],
                'unique_together': {('family', 'notification_type', 'notification_method')},
            },
        ),
        migrations.CreateModel(
            name='FamilyStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('parent', 'Parent'), ('guardian', 'Guardian'), ('sibling', 'Sibling'), ('grandparent', 'Grandparent'), ('uncle_aunt', 'Uncle/Aunt'), ('other', 'Other')], help_text='Relationship to student', max_length=20)),
                ('guardian_status', models.CharField(choices=[('primary', 'Primary Guardian'), ('secondary', 'Secondary Guardian'), ('emergency', 'Emergency Contact'), ('other', 'Other')], default='primary', max_length=20)),
                ('contact_preferences', models.JSONField(default=dict, help_text='Preferred contact methods and times')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_students', to='families.family')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_relationships', to='students.student')),
            ],
            options={
                'verbose_name': 'Family Student',
                'verbose_name_plural': 'Family Students',
                'ordering': ['family', 'student'],
                'unique_together': {('family', 'student')},
            },
        ),
    ]
