# Generated by Django 5.0.1 on 2025-08-29 19:49

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('learning', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BehavioralObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('behavior_type', models.CharField(choices=[('positive', 'Positive Behavior'), ('concerning', 'Concerning Behavior'), ('neutral', 'Neutral Observation'), ('achievement', 'Achievement/Milestone'), ('social', 'Social Interaction'), ('academic', 'Academic Behavior')], max_length=20)),
                ('severity', models.CharField(blank=True, choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('significant', 'Significant'), ('critical', 'Critical')], max_length=20, null=True)),
                ('description', models.TextField()),
                ('context', models.TextField(blank=True, null=True)),
                ('intervention_needed', models.BooleanField(default=False)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('tags', models.JSONField(default=list)),
                ('observed_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('observer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_observations', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='EngagementMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('lesson', 'Lesson'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('discussion', 'Discussion'), ('project', 'Project'), ('ai_interaction', 'AI Interaction')], max_length=20)),
                ('attention_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('participation_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('interaction_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('completion_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('time_spent_minutes', models.IntegerField()),
                ('expected_time_minutes', models.IntegerField(blank=True, null=True)),
                ('clicks_interactions', models.IntegerField(default=0)),
                ('questions_asked', models.IntegerField(default=0)),
                ('help_requests', models.IntegerField(default=0)),
                ('off_task_minutes', models.IntegerField(default=0)),
                ('session_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_metrics', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analytics_type', models.CharField(choices=[('learning_style', 'Learning Style Analysis'), ('knowledge_gap', 'Knowledge Gap Analysis'), ('progress_prediction', 'Progress Prediction'), ('difficulty_analysis', 'Difficulty Analysis'), ('engagement_pattern', 'Engagement Pattern'), ('performance_trend', 'Performance Trend')], max_length=30)),
                ('insights', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('data_points_analyzed', models.IntegerField()),
                ('analysis_period_start', models.DateField()),
                ('analysis_period_end', models.DateField()),
                ('algorithm_version', models.CharField(default='1.0', max_length=20)),
                ('generated_by', models.CharField(default='AI_Analytics_Engine', max_length=50)),
                ('is_actionable', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_analytics', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='LearningProgressTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('lessons_completed', models.IntegerField(default=0)),
                ('total_lessons', models.IntegerField()),
                ('average_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('mastery_level', models.CharField(default='developing', max_length=20)),
                ('learning_velocity', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total_time_spent_minutes', models.IntegerField(default=0)),
                ('estimated_completion_date', models.DateField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('difficulty_adjustments', models.JSONField(default=list)),
                ('current_lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learningpath')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_tracking', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='SystemAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('performance', 'System Performance'), ('usage', 'Usage Statistics'), ('engagement', 'Engagement Metrics'), ('ai_effectiveness', 'AI Effectiveness'), ('learning_outcomes', 'Learning Outcomes')], max_length=30)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('metrics', models.JSONField(default=dict)),
                ('trends', models.JSONField(default=dict)),
                ('comparisons', models.JSONField(default=dict)),
                ('uptime_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('error_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('active_users', models.IntegerField(blank=True, null=True)),
                ('total_sessions', models.IntegerField(blank=True, null=True)),
                ('average_session_duration', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('metric_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused Absence'), ('partial', 'Partial Attendance')], max_length=20)),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('total_minutes', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.staff')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='accounts.student')),
            ],
            options={
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ClassroomAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_level', models.CharField(max_length=5)),
                ('analysis_date', models.DateField(default=django.utils.timezone.now)),
                ('average_performance', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('performance_distribution', models.JSONField(default=dict)),
                ('top_performers_count', models.IntegerField(default=0)),
                ('struggling_students_count', models.IntegerField(default=0)),
                ('average_engagement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('attendance_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('participation_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('concepts_mastered', models.JSONField(default=list)),
                ('concepts_struggling', models.JSONField(default=list)),
                ('common_misconceptions', models.JSONField(default=list)),
                ('ai_recommendations', models.JSONField(default=list)),
                ('intervention_suggestions', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.subject')),
            ],
            options={
                'unique_together': {('grade_level', 'subject', 'analysis_date')},
            },
        ),
        migrations.CreateModel(
            name='ParentEngagementMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('login_count', models.IntegerField(default=0)),
                ('session_duration_minutes', models.IntegerField(default=0)),
                ('pages_viewed', models.IntegerField(default=0)),
                ('messages_sent', models.IntegerField(default=0)),
                ('messages_received', models.IntegerField(default=0)),
                ('notifications_read', models.IntegerField(default=0)),
                ('progress_checks', models.IntegerField(default=0)),
                ('report_views', models.IntegerField(default=0)),
                ('assignment_reviews', models.IntegerField(default=0)),
                ('help_requests', models.IntegerField(default=0)),
                ('meeting_requests', models.IntegerField(default=0)),
                ('feedback_provided', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_metrics', to='accounts.family')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_engagement', to='accounts.student')),
            ],
            options={
                'unique_together': {('family', 'student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='StudentPerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('quiz_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('assignment_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('participation_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('lessons_completed', models.IntegerField(default=0)),
                ('total_study_time_minutes', models.IntegerField(default=0)),
                ('average_session_duration_minutes', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('concepts_mastered', models.IntegerField(default=0)),
                ('concepts_struggling', models.IntegerField(default=0)),
                ('ai_interactions_count', models.IntegerField(default=0)),
                ('questions_asked', models.IntegerField(default=0)),
                ('help_requests', models.IntegerField(default=0)),
                ('peer_collaborations', models.IntegerField(default=0)),
                ('attendance_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('punctuality_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('engagement_level', models.CharField(default='medium', max_length=20)),
                ('motivation_level', models.CharField(default='medium', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='accounts.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'date')},
            },
        ),
    ]
