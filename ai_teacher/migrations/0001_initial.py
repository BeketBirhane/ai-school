# Generated by Django 5.0.1 on 2025-08-29 19:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('learning', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AITeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='AI Teacher', max_length=100)),
                ('personality_type', models.CharField(choices=[('encouraging', 'Encouraging and Supportive'), ('professional', 'Professional and Direct'), ('friendly', 'Friendly and Casual'), ('patient', 'Patient and Understanding'), ('enthusiastic', 'Enthusiastic and Energetic')], default='encouraging', max_length=20)),
                ('system_prompt', models.TextField()),
                ('specializations', models.JSONField(default=list)),
                ('language_preferences', models.JSONField(default=list)),
                ('voice_settings', models.JSONField(default=dict)),
                ('avatar_image', models.ImageField(blank=True, null=True, upload_to='ai_avatars/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('performance', 'Performance Feedback'), ('encouragement', 'Encouragement'), ('correction', 'Correction'), ('suggestion', 'Suggestion'), ('praise', 'Praise'), ('guidance', 'Guidance')], max_length=20)),
                ('content', models.TextField()),
                ('context', models.JSONField(default=dict)),
                ('is_automated', models.BooleanField(default=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_feedback', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='AITeachingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('individual_lesson', 'Individual Lesson'), ('practice_session', 'Practice Session'), ('review_session', 'Review Session'), ('assessment_prep', 'Assessment Preparation'), ('project_guidance', 'Project Guidance'), ('motivation_session', 'Motivation Session')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('objectives', models.JSONField(default=list)),
                ('planned_activities', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('effectiveness_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('student_engagement_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ai_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_teacher.aiteacherprofile')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_teaching_sessions', to='accounts.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_type', models.CharField(choices=[('lesson_help', 'Lesson Help'), ('general_question', 'General Question'), ('homework_assistance', 'Homework Assistance'), ('motivation', 'Motivation and Encouragement'), ('explanation', 'Concept Explanation'), ('practice', 'Practice Session'), ('feedback', 'Feedback Discussion')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('context', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_message_at', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('ai_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='ai_teacher.aiteacherprofile')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='LearningRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('lesson', 'Lesson Recommendation'), ('practice', 'Practice Activity'), ('review', 'Review Material'), ('challenge', 'Challenge Problem'), ('resource', 'Additional Resource'), ('break', 'Take a Break'), ('help', 'Seek Help')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('reasoning', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('action_data', models.JSONField(default=dict)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_recommendations', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('student', 'Student'), ('ai', 'AI Teacher'), ('system', 'System')], max_length=20)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('voice', 'Voice Message'), ('image', 'Image'), ('file', 'File Attachment'), ('system', 'System Message')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('attachments', models.JSONField(default=list)),
                ('is_flagged', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_teacher.conversation')),
            ],
            options={
                'ordering': ['conversation', 'timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt_tokens', models.IntegerField()),
                ('completion_tokens', models.IntegerField()),
                ('total_tokens', models.IntegerField()),
                ('model_used', models.CharField(max_length=50)),
                ('response_time_ms', models.IntegerField()),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('processing_metadata', models.JSONField(default=dict)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_response_data', to='ai_teacher.message')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAIInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('question_asked', 'Question Asked'), ('help_requested', 'Help Requested'), ('explanation_sought', 'Explanation Sought'), ('practice_started', 'Practice Started'), ('feedback_received', 'Feedback Received'), ('recommendation_viewed', 'Recommendation Viewed'), ('conversation_started', 'Conversation Started')], max_length=30)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_teacher.conversation')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interactions', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
    ]
