# Generated by Django 5.0.2 on 2025-08-29 20:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoringAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('attention_loss', 'Attention Loss'), ('distraction', 'High Distraction'), ('frustration', 'Frustration Detected'), ('boredom', 'Boredom Detected'), ('technical_issue', 'Technical Issue'), ('privacy_concern', 'Privacy Concern'), ('behavior_change', 'Behavior Change'), ('performance_drop', 'Performance Drop'), ('engagement_decline', 'Engagement Decline'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('alert', 'Alert'), ('critical', 'Critical')], default='info', max_length=20)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('related_sessions', models.JSONField(blank=True, default=list)),
                ('related_events', models.JSONField(blank=True, default=list)),
                ('notify_family', models.BooleanField(default=True)),
                ('notify_staff', models.BooleanField(default=True)),
                ('notify_admin', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('response_notes', models.TextField(blank=True, null=True)),
                ('ai_analysis', models.JSONField(blank=True, default=dict)),
                ('ai_recommendations', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'monitoring_alerts',
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='PrivacySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webcam_monitoring_consent', models.BooleanField(default=False)),
                ('webcam_consent_date', models.DateTimeField(blank=True, null=True)),
                ('webcam_consent_version', models.CharField(blank=True, max_length=20, null=True)),
                ('behavioral_data_collection', models.BooleanField(default=False)),
                ('academic_data_collection', models.BooleanField(default=False)),
                ('ai_analysis_consent', models.BooleanField(default=False)),
                ('data_retention_days', models.IntegerField(default=365, help_text='Days to retain personal data')),
                ('anonymize_after_days', models.IntegerField(default=30, help_text='Days after which to anonymize data')),
                ('share_with_family', models.BooleanField(default=True)),
                ('share_with_staff', models.BooleanField(default=True)),
                ('share_with_ai_system', models.BooleanField(default=True)),
                ('share_for_research', models.BooleanField(default=False)),
                ('privacy_notifications', models.BooleanField(default=True)),
                ('data_breach_alerts', models.BooleanField(default=True)),
                ('consent_reminders', models.BooleanField(default=True)),
                ('family_access_level', models.CharField(choices=[('full', 'Full Access'), ('summary', 'Summary Only'), ('limited', 'Limited Access'), ('none', 'No Access')], default='summary', max_length=20)),
                ('staff_access_level', models.CharField(choices=[('full', 'Full Access'), ('summary', 'Summary Only'), ('limited', 'Limited Access'), ('none', 'No Access')], default='summary', max_length=20)),
                ('gdpr_consent_given', models.BooleanField(default=False)),
                ('gdpr_consent_date', models.DateTimeField(blank=True, null=True)),
                ('right_to_forget', models.BooleanField(default=False)),
                ('data_portability', models.BooleanField(default=True)),
                ('consent_history', models.JSONField(blank=True, default=list)),
                ('privacy_settings_changes', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'privacy_settings',
            },
        ),
        migrations.CreateModel(
            name='WebcamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('lesson_id', models.CharField(blank=True, max_length=100, null=True)),
                ('session_type', models.CharField(choices=[('ai_lesson', 'AI Lesson'), ('video_lesson', 'Video Lesson'), ('quiz', 'Quiz'), ('project_work', 'Project Work'), ('reading', 'Reading'), ('practice', 'Practice Exercise')], max_length=50)),
                ('consent_given', models.BooleanField(default=False)),
                ('consent_timestamp', models.DateTimeField(blank=True, null=True)),
                ('privacy_level', models.CharField(choices=[('full', 'Full Monitoring'), ('partial', 'Partial Monitoring'), ('minimal', 'Minimal Monitoring'), ('none', 'No Monitoring')], default='partial', max_length=20)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('browser_info', models.JSONField(blank=True, default=dict)),
                ('connection_quality', models.CharField(blank=True, choices=[('poor', 'Poor'), ('fair', 'Fair'), ('good', 'Good'), ('excellent', 'Excellent')], max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('interrupted', 'Interrupted'), ('error', 'Error')], default='active', max_length=20)),
                ('frames_captured', models.IntegerField(default=0)),
                ('analysis_quality', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webcam_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'webcam_sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='FrameAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame_number', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('frame_data_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('face_detected', models.BooleanField(default=False)),
                ('face_count', models.IntegerField(default=0)),
                ('face_locations', models.JSONField(blank=True, default=list)),
                ('attention_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('gaze_direction', models.CharField(blank=True, choices=[('screen', 'Looking at Screen'), ('away', 'Looking Away'), ('down', 'Looking Down'), ('up', 'Looking Up'), ('left', 'Looking Left'), ('right', 'Looking Right'), ('unknown', 'Unknown')], max_length=50, null=True)),
                ('gaze_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('emotional_state', models.CharField(blank=True, choices=[('happy', 'Happy'), ('focused', 'Focused'), ('frustrated', 'Frustrated'), ('bored', 'Bored'), ('confused', 'Confused'), ('excited', 'Excited'), ('neutral', 'Neutral'), ('unknown', 'Unknown')], max_length=50, null=True)),
                ('emotional_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('head_pose', models.JSONField(blank=True, default=dict)),
                ('eye_blink_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ai_model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('face_blurred', models.BooleanField(default=False)),
                ('data_anonymized', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frame_analyses', to='monitoring.webcamsession')),
            ],
            options={
                'db_table': 'frame_analyses',
                'ordering': ['session', 'frame_number'],
                'unique_together': {('session', 'frame_number')},
            },
        ),
        migrations.CreateModel(
            name='BehaviorEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('attention_loss', 'Attention Loss'), ('distraction', 'Distraction Detected'), ('re_engagement', 'Re-engagement'), ('frustration', 'Frustration Detected'), ('boredom', 'Boredom Detected'), ('excitement', 'Excitement Detected'), ('confusion', 'Confusion Detected'), ('break', 'Break Taken'), ('return', 'Return from Break'), ('technical_issue', 'Technical Issue'), ('other', 'Other')], max_length=50)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('ai_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ai_insights', models.JSONField(blank=True, default=dict)),
                ('ai_recommendations', models.JSONField(blank=True, default=list)),
                ('staff_notified', models.BooleanField(default=False)),
                ('notification_sent', models.DateTimeField(blank=True, null=True)),
                ('response_taken', models.CharField(blank=True, max_length=100, null=True)),
                ('frame_range', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_frames', models.ManyToManyField(blank=True, to='monitoring.frameanalysis')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_events', to='monitoring.webcamsession')),
            ],
            options={
                'db_table': 'behavior_events',
                'ordering': ['-start_time'],
            },
        ),
    ]
