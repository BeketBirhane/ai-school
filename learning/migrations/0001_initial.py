# Generated by Django 5.0.1 on 2025-08-29 19:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('estimated_duration_hours', models.IntegerField()),
                ('prerequisites_met', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by_ai', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('lesson_type', models.CharField(choices=[('video', 'Video Lesson'), ('reading', 'Reading Material'), ('interactive', 'Interactive Exercise'), ('quiz', 'Quiz/Assessment'), ('project', 'Project Work'), ('discussion', 'AI Discussion')], max_length=20)),
                ('content', models.JSONField(default=dict)),
                ('order', models.IntegerField()),
                ('estimated_duration_minutes', models.IntegerField()),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('learning_objectives', models.JSONField(default=list)),
                ('resources', models.JSONField(default=list)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='learning.learningpath')),
            ],
            options={
                'ordering': ['learning_path', 'order'],
                'unique_together': {('learning_path', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('grade_levels', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prerequisites', models.ManyToManyField(blank=True, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='StudentPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('item_type', models.CharField(choices=[('project', 'Project'), ('artwork', 'Artwork'), ('writing', 'Writing Sample'), ('video', 'Video'), ('code', 'Code Project'), ('presentation', 'Presentation'), ('certificate', 'Certificate'), ('achievement', 'Achievement')], max_length=20)),
                ('files', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('reflection', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_items', to='accounts.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('quiz_type', models.CharField(choices=[('practice', 'Practice Quiz'), ('assessment', 'Assessment'), ('final', 'Final Exam'), ('diagnostic', 'Diagnostic Test')], max_length=20)),
                ('time_limit_minutes', models.IntegerField(blank=True, null=True)),
                ('max_attempts', models.IntegerField(default=1)),
                ('passing_score', models.DecimalField(decimal_places=2, default=70.0, max_digits=5)),
                ('is_randomized', models.BooleanField(default=False)),
                ('show_results_immediately', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='learning.lesson')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.subject')),
            ],
        ),
        migrations.AddField(
            model_name='learningpath',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.subject'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('assignment_type', models.CharField(choices=[('homework', 'Homework'), ('project', 'Project'), ('essay', 'Essay'), ('presentation', 'Presentation'), ('experiment', 'Experiment'), ('creative', 'Creative Work')], max_length=20)),
                ('due_date', models.DateTimeField()),
                ('max_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('instructions', models.TextField()),
                ('resources', models.JSONField(default=list)),
                ('rubric', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ManyToManyField(related_name='assignments', to='accounts.student')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assignments', to='accounts.staff')),
                ('learning_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning.learningpath')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True)),
                ('files', models.JSONField(default=list)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('returned', 'Returned'), ('resubmitted', 'Resubmitted')], default='draft', max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('is_late', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='learning.assignment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.staff')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='accounts.student')),
            ],
            options={
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('needs_review', 'Needs Review'), ('mastered', 'Mastered')], default='not_started', max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('time_spent_minutes', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='learning.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to='accounts.student')),
            ],
            options={
                'unique_together': {('student', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay'), ('fill_blank', 'Fill in the Blank'), ('matching', 'Matching')], max_length=20)),
                ('options', models.JSONField(blank=True, default=dict)),
                ('correct_answer', models.JSONField(default=dict)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('points', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('order', models.IntegerField()),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learning.quiz')),
            ],
            options={
                'ordering': ['quiz', 'order'],
                'unique_together': {('quiz', 'order')},
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.IntegerField()),
                ('status', models.CharField(choices=[('started', 'Started'), ('completed', 'Completed'), ('timed_out', 'Timed Out'), ('abandoned', 'Abandoned')], default='started', max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_points', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('answers', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent_minutes', models.IntegerField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='learning.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to='accounts.student')),
            ],
            options={
                'unique_together': {('quiz', 'student', 'attempt_number')},
            },
        ),
    ]
